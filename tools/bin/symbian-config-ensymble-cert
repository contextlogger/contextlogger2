#!/usr/bin/env ruby

PROG_NAME = File.basename(__FILE__)

PURPOSE = %{

Provides Symbian certificate information to Ensymble.

}.gsub(/\r?\n/, " ").strip

# -----------------------------------------------------
# Argument parsing...

require 'ostruct'
$op = OpenStruct.new

require 'optparse'

$op.verbose = true
$op.noop = false
$op.force = false

$opts = OptionParser.new do |opts|
  opts.banner = %{
#{PROG_NAME}

#{PURPOSE}

USAGE: #{PROG_NAME} option... file...

Usage examples:

  ensymble signsis `#{PROG_NAME} -eE -c dev` file.sis file.sisx

}
  opts.separator ""
  opts.separator "The \"options\" are:"
  opts.separator ""
  opts.on("-c", "--cert NAME", "specifies certificate name") do |name|
    $op.cert_name = name
  end
  opts.on("-e", "--ensymble-cert", "expand to ensymble cert options") do
    $op.ensymble_cert = true
  end
  opts.on("-E", "--ensymble-caps", "expand to ensymble caps options") do
    $op.ensymble_caps = true
  end
  opts.on("-h", "--help", "print usage") do
    puts opts.help
    exit 0
  end
  opts.on("-k", "--kit NAME", "specifies SDK name") do |name|
    $op.kit_name = name
  end
end

def usage_error message
  puts $opts.help
  puts "ERROR: " + message
  exit 1
end

begin
  $opts.parse!(ARGV)
rescue OptionParser::InvalidOption => e
  usage_error e.message
end

# -----------------------------------------------------
# Main...

unless ENV['EPOCLOCALRB']
  raise 'EPOCLOCALRB not set'
end

require ENV['EPOCLOCALRB']

$kit_name = $op.kit_name || ENV['KITNAME']

$cert_name = $op.cert_name or raise "cert not specified"

def w s
  $stdout.write(" ")
  $stdout.write(s) # xxx should really have escaping
end

ci = epoc_cert_info $cert_name, $kit_name

if $op.ensymble_cert and ci.cert_file
  raise unless ci.key_file
  w("--cert=%s" % ci.cert_file)
  w("--privkey=%s" % ci.key_file)
  w("--passphrase=%s" % (ci.passphrase || ""))
end

if $op.ensymble_caps
  w("--caps=%s" % ci.max_caps.join("+"))
end

#
# Copyright 2010 Helsinki Institute for Information Technology (HIIT)
# and the authors. All rights reserved.
#
# Authors: Tero Hasu <tero.hasu@hut.fi>
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
