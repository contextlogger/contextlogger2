;; Note that you should not be using "if not package" conditions
;; for components of which multiple versions have been released,
;; and it matters which one is installed.
;;
;; Note also that some components cannot be successfully installed
;; on top of the old one, and in those cases it is probably best
;; to use "if not package" no matter what.

#{"CL2 All-In-One"}, (0xe846000d), <%= $MAJOR_VERSION %>, <%= $MINOR_VERSION %>, 0

;; In S60 3rd ed SDKs, vendor name(s) are required.
;; Apparently both unique and localized versions.

;Localised Vendor name
%{"HIIT"}

;Unique Vendor name
:"HIIT"

;; Platform dependency.
[0x101F7961], 0, 0, 0, {"Series603rdProductID"}
[0x1028315F], 0, 0, 0, {"Series605thProductID"}

<% opts = []
   optix = {}
   if false
     if $WATCHDOG_SUPPORTED and not $unpack_embedded
       opts.push("Install watchdog"); optix[:watchdog] = opts.size
     end
   end
   opts.push("Install launcher"); optix[:launcher] = opts.size
   opts.push("Install ErrRd file"); optix[:errrd] = opts.size
%>
!(<%= opt_join(opts) %>)

;;
;; Daemon.
;;

<% if $unpack_embedded %>
"../daemon/build/<%= $VARIANT_NAME %>/cl2app.exe" - "!:\sys\bin\cl2app.exe"
"../daemon/src/backup_registration.xml" - "!:\private\e8460002\backup_registration.xml"
<% end %>

<% unless $unpack_embedded
   sisxfile = '../daemon/build/%s/cl2app.sisx' % [$VARIANT_NAME]
   uid = lookup_uid sisxfile
   uid_s = ("0x%08x" % uid)
   sisfile = copy_with_sis_ext sisxfile %>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

;;
;; Epocxplat DLL.
;;
;; We cannot really $unpack_embedded without getting the PKG code
;; for doing that from the component itself, as the rules are complex.
;;
<% 
capa = (($CERT_NAME == "dev") ? "devcert" : $CERT_NAME)
certsfx = ($SIGNED ? ("_" + $CERT_NAME) : "")
ext = ($SIGNED ? "sisx" : "sis")
sisxfile = '../epocxplat/packages/epocxplat_cl2_3rd_udeb_%s%s.%s' % [capa, certsfx, ext] 
uid = lookup_uid sisxfile
uid_s = ("0x%08x" % uid)
sisfile = copy_with_sis_ext sisxfile
%>
@<%= sisfile.inspect %>, (<%= uid_s %>)

;;
;; Key events ANIM DLLs. (OPTIONAL)
;;
;; Requires heavy permissions, so not in self-signed version.
;; Also not included if keypress sensor not enabled.
;;
<% if $KEYPRESS_ENABLED %>

<% sisxfile = '../keyevents/build/s60_30_%s/keyevents.sisx' % $CERT_NAME
   uid = lookup_uid sisxfile
   uid_s = ("0x%08x" % uid)
%>
if not package(<%= uid_s %>)

<% if $unpack_embedded %>
<% srcdir = "keyevents_" + $CERT_NAME
unpack_sis sisxfile, srcdir
entries = pkg_entries_for_sis srcdir, sisxfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

<% unless $unpack_embedded 
   sisfile = copy_with_sis_ext sisxfile
%>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

endif ;; package not installed

<% end %>

;;
;; HTTP filter plugin.
;;
<% if $HAVE_CL2WEBFILTER
   sisxfile = '../filter-http/packages/cl2webfilter_3rd_udeb_publisher_devx.sisx'
   uid = lookup_uid sisxfile
   uid_s = ("0x%08x" % uid)
   sisfile = copy_with_sis_ext sisxfile
%>
if not package(<%= uid_s %>)
@<%= sisfile.inspect %>, (<%= uid_s %>)
endif ;; package not installed
<% end %>

;;
;; C++ client library.
;;
<% sisxfile = '../cxx-cl2-cli-lib/build/s60_30_%s/cl2cli.sisx' % $CERT_NAME
   uid = lookup_uid sisxfile
   uid_s = ("0x%08x" % uid)
%>
if not package(<%= uid_s %>)

<% if $unpack_embedded %>
<% srcdir = "cxx_cl2_client_" + $CERT_NAME
unpack_sis sisxfile, srcdir
entries = pkg_entries_for_sis srcdir, sisxfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

<% unless $unpack_embedded 
   sisfile = copy_with_sis_ext sisxfile
%>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

endif ;; package not installed

;;
;; Python client library.
;;
<% sisxfile = '../py-cl2-cli-lib/build/s60_30_%s/py_cl2_client.sisx' % $CERT_NAME
   uid = lookup_uid sisxfile
   uid_s = ("0x%08x" % uid)
%>
if not package(<%= uid_s %>)

<% if $unpack_embedded %>
<% srcdir = "py_cl2_client_" + $CERT_NAME
unpack_sis sisxfile, srcdir
entries = pkg_entries_for_sis srcdir, sisxfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

<% unless $unpack_embedded 
   sisfile = copy_with_sis_ext sisxfile
%>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

endif ;; package not installed

<% if false %>
;;
;; Watchdog. (OPTIONAL)
;;
;; Requires heavy permissions, so not in self-signed version.
;;
<% if $WATCHDOG_SUPPORTED and not $unpack_embedded %>
if option<%= optix[:watchdog] %> = 1

<% ext = $SIGNED ? "sisx" : "sis"
   srcfile = '../watchdog/build/s60_30_udeb_dev/cl2watchdog.%s' % ext
   uid = lookup_uid srcfile
   uid_s = ("0x%08x" % uid)
   sisfile = copy_with_sis_ext srcfile
%>
if not package(<%= uid_s %>)
@<%= sisfile.inspect %>, (<%= uid_s %>)
endif

endif ;; watchdog option chosen
<% end %>
<% end %>

;;
;; Launcher. (OPTIONAL)
;;
;; Note that cannot just fold in the launcher SIS file here,
;; as then it would not be possible to uninstall it separately.
;; This unfortunately means that the launcher then must also
;; be signed separately, making its embedding here a bit
;; of a no-go in some cases.
;;
;; Embeds Python runtime, Python script shell, and Miso.
;;
;; Note that the script shell need not be signed in any
;; particular way, as we merely require some Python libs
;; from it.
;;
;; Not sure if it is okay to install Python on top of an old
;; installation, so we shall not do that if any version of
;; Python is already installed. Hopefully the version is
;; compatible enough. The chances are good as Python 1.4.5
;; is not that new any longer.
;;
;; PythonForS60_1_4_5_3rdEd.sis: 0x2000b1a0
;; PythonScriptShell_1_4_5_3rdEd.SIS: 0x2000b1a5
;; PythonScriptShell_1_4_5_3rdEd_unsigned_testrange.SIS: 0xe000b1a5
;;
if option<%= optix[:launcher] %> = 1

;; Python for S60.

<% srcdir = '../software/pys60-1.4.5'
   srcfiles = ['PythonForS60_1_4_5_3rdEd.sis',
               'PythonScriptShell_1_4_5_3rdEd_unsigned_testrange.sisx' # DevCert signed
               #'PythonScriptShell_1_4_5_3rdEd.SIS' # Nokia signed
              ] 
%>

<% if $non_redistributable %>

;; Runtime.
<% srcfile = srcfiles[0]
   srcfile = File.join(srcdir, srcfile)
   uid = lookup_uid srcfile
   uid_s = ("0x%08x" % uid) %>
if not package(<%= uid_s %>)
@<%= srcfile.inspect %>, (<%= uid_s %>)
endif

;; Script shell.
<% srcfile = srcfiles[1]
   srcfile = File.join(srcdir, srcfile)
   sisfile = copy_with_sis_ext srcfile
   uid = lookup_uid sisfile
   uid_s = ("0x%08x" % uid) %>
if not (package(0x2000b1a5) or package(0xe000b1a5))
@<%= sisfile.inspect %>, (<%= uid_s %>)
endif

<% end %>

<% unless $non_redistributable
  uids = srcfiles.map {|x| lookup_uid(File.join(srcdir, x))}
  conds = uids.map {|x| "(not package(0x%08x))" % x}
  condexpr = conds.join " or " %>
;; The script shell is available both as self-signed and unsigned versions, with different UIDs.
if (not package(0x2000b1a0)) or (not (package(0x2000b1a5) or package(0xe000b1a5)))
<%= display_note ("Python for S60 is not (fully) installed. Please install the files %s. They are available for download from http://sourceforge.net/projects/pys60/files/." % (srcfiles.join(" and "))) %>
endif
<% end %>

;; Miso.
;;
;; Since we are embedding without building Miso here, do make sure that a sensible
;; version has been built (and in a DevCert case) appropriately signed as well.
<% misover = '2.00'
   srcdir = '../software/miso-%s' % misover
   old_ext = $SIGNED ? "sisx" : "sis"
   kit = (($CERT_NAME == "self32") ? "s60_32" : "s60_30")
   cert_name = case $CERT_NAME when "self30", "self32" then "self" else $CERT_NAME end
   srcname = 'miso-%s-%s_py1_5th_%s.%s' % [misover, kit, cert_name, old_ext]
   srcfile = File.join(srcdir, srcname)
   sisfile = copy_with_sis_ext srcfile
   uid = lookup_uid sisfile
   uid_s = ("0x%08x" % uid) %>

<% if $unpack_embedded %>
<% srcdir = "miso_" + $CERT_NAME
unpack_sis sisfile, srcdir
entries = pkg_entries_for_sis srcdir, sisfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

<% unless $unpack_embedded %>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

;; The launcher itself.
<% cert_name = $SIGNED ? $CERT_NAME : "unsigned"
   old_ext = $SIGNED ? "sisx" : "sis"
   old_home = "../launcher"
   old_name = "cl2launcher_%s.%s" % [cert_name, old_ext]
   old_file = File.join(old_home, old_name)
   sisfile = copy_with_sis_ext old_file
   uid = lookup_uid sisfile
   uid_s = ("0x%08x" % uid)
%>

<% unless $unpack_embedded %>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

<% if $unpack_embedded
srcdir = "cl2launcher_" + cert_name
unpack_sis sisfile, srcdir
entries = pkg_entries_for_sis srcdir, sisfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

endif ;; launcher install requested

;;
;; Open C.
;;
;; Signed as it is by Nokia.
;;
;; I think these are redistributable, but the compliance
;; terms look rather involved.
;;
;; The stub file should indicate whether Open C is built in
;; or not.
;;
<% srcdir = '../software/openc-1.6'
   srcfiles = %w{
openc_glib_s60_1_6_ss.sis  pips_s60_1_6_ss.sis    stdioserver_s60_1_6_ss.sis
openc_ssl_s60_1_6_ss.sis   stdcpp_s60_1_6_ss.sis
   }
%>
if not exists("z:\system\install\openc_stdlibs_stub.sis")

<% if $non_redistributable %>
<% for srcfile in srcfiles
   srcfile = File.join(srcdir, srcfile)
   uid = lookup_uid srcfile
   uid_s = ("0x%08x" % uid) %>
if not package(<%= uid_s %>)
@<%= srcfile.inspect %>, (<%= uid_s %>)
endif
<% end %>
<% end %>

<% unless $non_redistributable
  uids = srcfiles.map {|x| lookup_uid(File.join(srcdir, x))}
  conds = uids.map {|x| "(not package(0x%08x))" % x}
  condexpr = conds.join " or " %>
if <%= condexpr %>
<%= display_note ("Required Open C libraries are not installed. Please install the files %s. They are available for download from http://www.forum.nokia.com/main/resources/technologies/open_c/." % (srcfiles.join(" and "))) %>
endif
<% end %>

endif

;;
;; EUserHL.
;;
;; Signed as it is by Symbian.
;;
;; The documentation says nothing about IPR or redistribution,
;; (except that the component is made available under SFL v1.0),
;; so we cannot necessarily include this.
;;
<% if false %>

<% srcfile = "../software/euserhl-1.2/euserhl.sis"
   uid = lookup_uid srcfile
   uid_s = ("0x%08x" % uid) %>

<% if $non_redistributable %>
@<%= srcfile.inspect %>, (<%= uid_s %>)
<% end %>

<% unless $non_redistributable %>
if not package(<%= uid_s %>)
<%= display_note "This software requires the EUserHL v1.2 library. Please download and install it. The download URL is http://developer.symbian.com/main/downloads/files/EUserHL.zip." %>
endif
<% end %>

<% end %>

;;
;; ErrRd file. (OPTIONAL)
;;
;; Self-signed by us, and that is always okay.
;; We should also never need to unpack this.
;;
;; Note that the @ directive pointlessly requires that
;; the file have a .sis extension, not .sisx or anything else.
;;
<% $unpack_errrd = false %>
if option<%= optix[:errrd] %> = 1
if not package(<%= uid_s %>)

<% srcfile = "../software/errrd-file/errrd-file-self.sisx"
   uid = lookup_uid srcfile
   uid_s = ("0x%08x" % uid) %>

<% if $unpack_errrd %>
<% srcdir = "errrd_file_self"
unpack_sis srcfile, srcdir
entries = pkg_entries_for_sis srcdir, srcfile
for entry in entries %>
<%= entry %>
<% end %>
<% end %>

<% unless $unpack_errrd
   sisfile = copy_with_sis_ext srcfile %>
@<%= sisfile.inspect %>, (<%= uid_s %>)
<% end %>

endif
endif
