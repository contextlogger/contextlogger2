targettype     <%= build.mmp_target_type %>
target         <%= build.binary_file.basename %>

uid	       <%= build.uid2.chex_string %> <%= build.uid3.chex_string %>
secureid       <%= build.uid3.chex_string %>

<% unless build.v9_up? %>
targetpath     "\\system\\apps\\" + cl2app
<% end %>

// Stack size of 0x5000 is recommended for any but the most trivial Symbian apps
// (and in this application increasing the default would seem essential);
// running out of stack is likely to cause a KERN-EXEC 3...
// not very informative, is it.
// For Open C++ apps, the recommendation is 0x10000.
epocstacksize 	0x10000

// qmake defaults to this setting
<% if $WITH_QT %>
EPOCHEAPSIZE	0x020000 0x800000
<% end %>

systeminclude \epoc32\include
systeminclude \epoc32\include\stdapis
systeminclude \epoc32\include\stdapis\glib-2.0
<% if true %>
// Qt headers do refer to STL headers. Crypto++ also.
systeminclude \epoc32\include\stdapis\stlport
<% end %>

<% if $WITH_QT %>
<% qt_inc_list = %w{include/QtCore include/QtNetwork include mkspecs/common/symbian/stl-off mkspecs/common/symbian}
   qt_inc_list.push('include/QtGui') if $WITH_QT_GUI
   qt_inc_list.push('include/QtXml') if $WITH_QT_XML
   for inc in qt_inc_list %>
systeminclude		../../../../../symbian-gp/qt-latest/<%= inc %>
<% end %>
<% end %>

// Must be after Qt headers, as there is some overlap with Qt itself.
<% if $USE_QT_MOBILITY %>
systeminclude \epoc32\include\middleware
<% end %>

userinclude .
userinclude ..\..\inc
userinclude ..\..\src
userinclude ..\..\..\shared
userinclude ..\..\..\lua\src
userinclude ..\..\..\lua\etc // for lua.hpp
<% if $USE_SQLITE3H %>
userinclude ..\..\..\sqlite3h\src\sqlite3
<% end %>
userinclude ..\..\..\epocxplat\src
userinclude ..\..\..\filter-http\inc
userinclude ..\..\..\qxmpp\src

<% if $FEATURE_UPLOADER %>
userinclude ..\..\..\time-spec
<% end %>

<% if $HAVE_ANIM %>
userinclude ..\..\..\keyevents\inc
<% end %>

// Any STATICLIBRARY declarations should come before other
// stuff that is linked.

<% if $USE_SQLITE3H and ($SQLITE3H_AS == "static") %>
staticlibrary sqlite3h.lib
<% end %>

<% if $LUA_AS_STATIC_LIB %>
staticlibrary luastatic.lib  // built by us
<% end %>

<% if $FEATURE_REMOKON %>
staticlibrary qxmpp.lib
<% end %>

// With DLLs, note that if there are symbol conflicts, it's first
// come, first served, so may want to have the more stable libraries
// listed first.

library euser.lib

<% if $DO_LOGGING %>
library flogger.lib
<% end %>

<% if $PROFILE_ENABLED %>
<% if $HAVE_PROFILEENGINE_LIB %>
library profileengine.lib
<% else %>
library profileeng.lib // SDK Plugins
<% end %>
<% end %>

<% if $SMSEVENT_ENABLED %>
library msgs.lib // CMsvSession
library smcm.lib // CSmsClientMtm
<% end %>

library apgrfx.lib
library apparc.lib
library avkon.lib
library bafl.lib
library bluetooth.lib
library btmanclient.lib
library charconv.lib
library commdb.lib
library commonui.lib // CErrorUI
library cone.lib
library efsrv.lib
library eikcoctl.lib
library eikcore.lib
library esock.lib
library estor.lib // RReadStream
library etel3rdparty.lib // CTelephony
library gsmu.lib // CSmsPDU
library http.lib
library inetprotutil.lib // URI parsers
library insock.lib // Internet protocol support for esock
library lbs.lib
library smsu.lib // for SMS triggers
library ws32.lib

library aknnotify.lib eiksrv.lib // CAknGlobalNote
library cntmodel.lib // CContactDatabase
//library etel.lib // RCall, RLine
//library logcli.lib // CLogClient
//library pbkeng.lib // CPbkContactEngine

<% if $MUSIC_ENABLED %>
library    mpxcommon.lib
library    mpxplaybackutility.lib
<% end %>

<% if $WEBURL_ENABLED %>
library epocxplat_e846000e.lib
<% end %>

<% if $HAVE_EUSERHL %>
library euserhl.lib    // High-Level APIs
<% end %>

<% if $USE_QT_SENSORS %>
library QtSensors.lib  // Qt Mobility
<% end %>

library libc.lib       // PIPS
library libm.lib       // required for Lua
library libglib.lib    // Open C
library libgobject.lib // Open C
library libpthread.lib // Open C
<% if true %>
library libstdcpp.lib  // Open C++
<% end %>

//library libz.lib       // Open C
//library libssl.lib     // Open C
//library libcrypto.lib  // Open C

<% if $HAVE_SQLITE3 %>
library sqlite3.lib // Qt
<% end %>

// Only static linking is supported for now, not tested with Symbian version.
<% if $USE_SQLITE3H and ($SQLITE3H_AS == "dynamic") %>
library sqlite3.lib
<% end %>

<% if $KEYPRESS_ENABLED and $HAVE_ANIM %>
library keyevents_client_2000af44.lib
<% end %>

<% if $WITH_QT %>
LIBRARY		libdl.lib
LIBRARY		QtCore.lib
LIBRARY		QtNetwork.lib
<% if $WITH_QT_GUI %>
LIBRARY		QtGui.lib
<% end %>
<% if $WITH_QT_XML %>
LIBRARY		QtXml.lib
<% end %>
<% end %>

sourcepath ..\..\src
source ac_app_context.cpp
source bb_blackboard.cpp
source cf_query.c
source cf_rcfile.cpp
<% if $IS_APPLICATION and not $WITH_QT %>
source cl2appapp.cpp
source cl2appappui.cpp
source cl2appcontainer.cpp
source cl2appdocument.cpp
<% end %>
//source client-cl2.c
source client-run.c
source config_db.c
source db_creation.c
source epoc-ao-gerror.cpp
source epoc-appfocus.cpp
source epoc-btprox.cpp
source epoc-callstatus.cpp
source epoc-cellid.cpp
<% if $CELLPOS_ENABLED %>
source epoc-cellpos.cpp
<% end %>
source epoc-cliapi-server.cpp
<% if $GPS_ENABLED %>
source epoc-gps.cpp
<% end %>
<% if $POSITION_ENABLED %>
source epoc-gps-module.cpp
source epoc-gps-positioner.cpp
<% end %>
<% if $HTTPURL_ENABLED %>
source epoc-httpurl.cpp
<% end %>
source epoc-iap.cpp
source epoc-inactivity.cpp
source epoc-indicator.cpp
<% if $HAVE_ANIM %>
source epoc-keypress-anim.cpp
<% else %>
source epoc-keypress.cpp
<% end %>
<% if $MUSIC_ENABLED %>
source epoc-music.cpp
<% end %>
<% if $HAVE_PROFILEENGINE_LIB %>
source epoc-profile-31.cpp
<% else %>
source epoc-profile.cpp
<% end %>
source epoc-s60-version.cpp
source epoc-smsevent.cpp
<% if $WEBURL_ENABLED %>
source epoc-weburl.cpp
<% end %>
source er_errors.c
source er_errors_cxx.cpp
source kr_controller.c
source kr_diskspace.cpp
source kr_plat_ao_epoc.cpp
<% if $FEATURE_REMOKON %>
source kr_sms_trigger_epoc.cpp
<% end %>
//source libluasqlite3.c // but not yet supported
<% if $FEATURE_LOCALSERVER %>
source local_server.cpp
<% end %>
source lua_bindings.cpp
source lua_cl2.cpp
//source lua_linit_cl2.c
source ld_log_db.c
source ld_create.c
source ld_logging.c
<% if (not $WITH_QT) and (not $IS_APPLICATION) %>
source main_epoc.cpp
<% end %>
<% if $WITH_QT and not $IS_APPLICATION %>
source main_epoc_qt.cpp
<% end %>
<% if $WITH_QT and $IS_APPLICATION %>
source main_demo_epoc_qt.cpp window_demo_qt.cpp moc_window_demo_qt.cpp
<% end %>
<% if $FEATURE_REMOKON %>
source rk_remokon_qt.cpp moc_rk_remokon_qt.cpp
<% end %>
source sa_array.cpp 
<% if $USE_QT_SENSORS %>
source sa_qt_sensors.cpp moc_sa_qt_sensors.cpp
<% end %>
<% if $LIGHT_ENABLED %>
source sa_sensor_light_qt.cpp moc_sa_sensor_light_qt.cpp
<% end %>
source sa_sensor_list_log_db.c
source sa_sensor_mark.c
<% if $PROXIMITY_ENABLED %>
source sa_sensor_proximity_qt.cpp moc_sa_sensor_proximity_qt.cpp
<% end %>
<% if $WITH_TAP_SENSORS %>
source sa_sensor_tap_qt.cpp moc_sa_sensor_tap_qt.cpp
<% end %>
//source sa_sensor_util_epoc.cpp
source symbian_auto_ptr.cpp
<% if $FEATURE_UPLOADER %>
source timer_generic_epoc.cpp
<% end %>
<% if $FEATURE_COMPRESS_LOGS %>
source ut_compress_cryptopp_gzip.cpp
<% end %>
source ut_diskspace_epoc.cpp
source ut_immediate_epoc.cpp
//source ut_phonecall_epoc.cpp   //xxx experimental
source ut_retry_epoc.cpp
<% if $SMSEVENT_ENABLED %>
source ut_sms_epoc.cpp
<% end %>
source ut_telephony_epoc.cpp
<% if $CALLSTATUS_ENABLED or $SMSEVENT_ENABLED %>
source ut_telno_epoc.cpp
<% end %>
//source ut_timeout_epoc.cpp   //xxx experimental
<% if $FEATURE_REMOKON or $MARK_ENABLED %>
source ut_timer_epoc.cpp
<% end %>
source utils_cl2.c
source utils_cl2_cxx.cpp

<% if $FEATURE_UPLOADER %>
<% if $UPLOAD_WITH_QT %>
source iodeviceseq_qt.cpp moc_iodeviceseq_qt.cpp
source up_uploader_qt.cpp moc_up_uploader_qt_private.cpp
source ut_abs_timer_qt_epoc.cpp moc_ut_abs_timer_qt_epoc.cpp
<% else %>
source up_uploader_epoc.cpp
source up_poster_epoc.cpp
<% end %>
source up_shared.c
<% end %>

sourcepath ..\..\..\shared\common
source assertions_cxx.cpp
source epoc_rs_buf8.cpp
source epoc-time.cpp
source error_list.c
source gxerror.c
source gx_maybe_string.c
source logging.cpp
source logging-time.c
source platform_error.c
<% if $WITH_QT and $IS_APPLICATION %>
source QsKineticScroller.cpp moc_QsKineticScroller.cpp
<% end %>
source utilities.c
source utilities_cxx.cpp

<% if $FEATURE_COMPRESS_LOGS %>
// These fail to build unless you remove the -I- from makdeps.pm, as relative user include paths are used.
sourcepath ..\..\..\shared\cryptopp561
source algparam.cpp crc.cpp cryptlib.cpp files.cpp filters.cpp gzip.cpp misc.cpp mqueue.cpp queue.cpp zdeflate.cpp
<% end %>

<% if $FEATURE_UPLOADER %>
sourcepath ..\..\..\time-spec
source moment_parser.c
source time_utils.c
<% end %>

<% if $LUA_FROM_SOURCE %>
sourcepath ..\..\..\lua\src
source			lapi.c
source			lauxlib.c
source			lbaselib.c
source			lcode.c
source			ldblib.c
source			ldebug.c
source			ldo.cpp       	// ldo.c compiled as C++
source			ldump.c
source			lfunc.c
source			lgc.c
source			linit.c
source			liolib.c
source			llex.c
source			lmathlib.c
source			lmem.c
source			loadlib.cpp   	// loadlib.c compiled as C++
source			lobject.c
source			lopcodes.c
source			loslib.c
source			lparser.c
source			lstate.c
source			lstring.c
source			lstrlib.c
source			ltable.c
source			ltablib.c
source			ltm.c
source			lundump.c
source			lvm.c
source 			lzio.c
source			print.c
<% end %>

<% if $USE_SQLITE3H and ($SQLITE3H_AS == "source") %>
sourcepath ..\..\..\sqlite3h\src\sqlite3
source alter.c
source analyze.c
source attach.c
source auth.c
source bitvec.c
source btmutex.c
source btree.c
source build.c
source callback.c
source complete.c
source date.c
source delete.c
source expr.c
source fault.c
source func.c
source global.c
source hash.c
source insert.c
source journal.c
source legacy.c
source loadext.c
source main.c
source malloc.c
source mem0.c
source mem1.c
source mem2.c
source mem3.c
source mem5.c
source memjournal.c
source mutex.c
source mutex_noop.c
//source mutex_os2.c
source mutex_unix.c
//source mutex_w32.c
source os.c
source os_symbian.c
//source os_win.c
//source os_os2.c
source pager.c
source pcache.c
source pragma.c
source prepare.c
source printf.c
source random.c
source resolve.c
source select.c
source status.c
source table.c
source tokenize.c
source trigger.c
source utf.c
source update.c
source util.c
source vacuum.c
source vdbe.c
source vdbeapi.c
source vdbeaux.c
source vdbeblob.c
source vdbefifo.c
source vdbemem.c
source vtab.c
source walker.c
source where.c
source opcodes.c
source parse.c
<% end %>

<% if $WITH_QT %>
// See Qt src/s60main to see what this library contains.
// Looks like it essentially just sets up cleanup stack and then calls 'main'.
// We want neither if our main_ implementation has an E32Main.
<% if $WITH_QT_GUI %>
//staticlibrary	qtmain.lib
<% else %>
//staticlibrary	libcrt0.lib
<% end %>
<% end %>

// This sourcepath also applies to the resource files.
sourcepath ..\..\src

LANG sc

<% if $IS_APPLICATION %>

<% if build.v9_up? %>
start resource    cl2app.rss
header
targetpath resource\apps
end //resource

start resource    cl2app_reg.rss
targetpath 	  \private\10003a3f\import\apps
end //resource
<% else %>
RESOURCE cl2app.rss
RESOURCE cl2app_caption.rss
<% end %>

<% unless build.v9_up? %>
AIF cl2app.aif ..\..\src cl2appaif.rss c8 context_pane_icon.bmp context_pane_icon_mask.bmp list_icon.bmp list_icon_mask.bmp
<% end %>

<% end %>

<% if build.v9_up? %>
VENDORID 0
<% if $CAPABILITIES.empty? %>
CAPABILITY NONE
<% else %>
CAPABILITY <%= $CAPABILITIES.join(" ") %>
<% end %>
<% end %>

<% if $KIT_VERNUM >= 52 %>
// This is required for Symbian^3 SDK, apparently.
APP_LAYER_SYSTEMINCLUDE
<% end %>

// No using the old client-server API.
macro __HIDE_IPC_V1__

macro __HAVE_APPLICATION_CONFIG__

<% if $WITH_QT %>
MACRO		UNICODE
MACRO		QT_KEYPAD_NAVIGATION
MACRO		QT_SOFTKEYS_ENABLED
MACRO		QT_USE_MATH_H_FLOATS
MACRO		QT_CORE_LIB
MACRO		QT_NETWORK_LIB

<% if $WITH_QT_GUI %>
MACRO		QT_GUI_LIB
<% end %>

<% if $WITH_QT_XML %>
MACRO		QT_XML_LIB
<% end %>

<% unless $DO_LOGGING %>
MACRO		QT_NO_DEBUG_OUTPUT
<% end %>

OPTION CW -cwd include
OPTION ARMCC --visibility_inlines_hidden
#if defined(ARMCC_4_0)
OPTION ARMCC --import_all_vtbl
#endif

// Gives warnings for C files.
// http://bugreports.qt.nokia.com/browse/QTBUG-11629
// "To get rid of the other warning, it appears that changes are required to the makmake tool modules (specifically, cl_bpabi.pm), or the gcce.mk base file."
// This only really matters for libraries (with exports).
//OPTION GCCE -fvisibility-inlines-hidden

// http://library.forum.nokia.com/topic/S60_3rd_Edition_Cpp_Developers_Library/GUID-35228542-8C95-4849-A73F-2B4F082F0C44/html/SDL_93/doc_source/ToolsAndUtilities93/Build-ref/Mmp-ref/paged.html#Mmp-ref.paged
//PAGED

// http://library.forum.nokia.com/topic/S60_3rd_Edition_Cpp_Developers_Library/GUID-35228542-8C95-4849-A73F-2B4F082F0C44/html/SDL_93/doc_source/ToolsAndUtilities93/Build-ref/Mmp-ref/bytepaircompresstarget.html#Mmp-ref.bytepaircompresstarget
//BYTEPAIRCOMPRESSTARGET

OPTION_REPLACE ARMCC --export_all_vtbl -D__QT_NOEFFECTMACRO_DONOTUSE
<% end %>

<% if false and build.target.edition >= 3 and build.target.fp >= 1 %>
// Required for Open C++, say the Qt guys, but our code will not compile with these. Not with either S60 3.0 MR SDK or S60 3.1 SDK. Presumably the Qt guys are using the S60 3.1 SDK. And possibly it is just the Qt codebase that requires these, and not necessarily ours.
OPTION CW -wchar_t on 
MACRO _WCHAR_T_DECLARED
<% end %>
